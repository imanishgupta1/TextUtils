{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","about","onClick","toogleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","console","log","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","newText1","split","join","length","App","setmode","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.789e1592.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1)\r\n    }\r\n  return (\r\n   \r\n      props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        \r\n      </div>\r\n    \r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">\r\n                {props.about}\r\n              </Link> */}\r\n              \r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.about}\r\n              </a>\r\n\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            {/* <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}  >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick ={props.toogleMode}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string,\r\n};\r\n\r\n// Navbar.defaultProps = {\r\n//     title: 'set name here'\r\n//   };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  // const [text, setText] = useState(\"Enter your text here\");\r\n  const [text, setText] = useState(\"\");\r\n\r\n  function handleOnChange(event) {\r\n    // console.log(\"onChange\")\r\n    setText(event.target.value); // here default  value  of useState updateing to write text in textarea\r\n  }\r\n\r\n  function handleUpClick() {\r\n    console.log(\"clicked\" + text);\r\n    // console.log( text)\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\", \"success\");\r\n  }\r\n\r\n  function handleLowClick() {\r\n    //   console.log(\"clicked\" + text)\r\n    // console.log( text)\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\", \"success\");\r\n  }\r\n\r\n  function handleClearClick() {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"All text cleared\", \"success\");\r\n  }\r\n\r\n  function handleCopy() {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text copied\", \"success\");\r\n  }\r\n\r\n  function handleExtraSpace() {\r\n    let newText1 = text.split(/[ ] +/);\r\n    setText(newText1.join(\" \"));\r\n    // console.log('hii')\r\n    props.showAlert(\"Extraspace removed\", \"success\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1 style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n          {\" \"}\r\n          {props.heading}\r\n        </h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"myBox\" className=\"form-label\"></label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"9\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#04285e\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>\r\n          Clear all\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n          Copy\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpace}>\r\n          Remove Extra Space\r\n        </button>\r\n        <div\r\n          className=\"container my-3\"\r\n          style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n        >\r\n          <h2>Your Text Summary</h2>\r\n          <p>\r\n            {\" \"}\r\n            {text.split(\" \").length} words and {text.length} characters\r\n          </p>\r\n          <p>Minutes read {0.008 * text.split(\" \").length} </p>\r\n          <h2>Preview Text</h2>\r\n          <p>\r\n            {\" \"}\r\n            {text.length > 0 ? text : \"Enter somehing in the above to preview\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import { BrowserRouter as Router, Switch, Route,  } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\"); //to enable dark mode\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n\n  const toogleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#04285e\";\n      showAlert(\"Dark mode has enabled\", \"success\");\n\n      // setInterval(() => {\n      //   document.title='TextUtils is Amazing'\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title='Install TextUtils '\n      // }, 3000);\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar\n        title=\"Manish\"\n        about=\"About me\"\n        mode={mode}\n        toogleMode={toogleMode}\n      />\n      <Alert alert={alert} />\n      {/* <Navbar  />   */}\n      {/*  container , my-3, ek class hoti hai bootstrap mein Jo css karti hai usko */}\n      <div className=\"container my-3\">\n       \n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n       */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm heading=\"Enter the text to analyse\" showAlert={showAlert} mode={mode} />\n          {/* </Route>\n        </Switch>\n         */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}